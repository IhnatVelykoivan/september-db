// // use test
// //
// // db.users.insertOne({name:'Ihnat',age:31})
// // db.users.insertMany([
// //     {name:'Oleh',age:28},
// //     {name:'Kokos',age:4},
// //     {name:'Max',age:18}])
// // db.users.find()
// // db.users.drop()
// use test
//
// db.users.insertMany([
//     {
//         name: 'Alex', age: 25, gender: 'male', address: {
//             city: 'Lviv',
//             street: 'Chornovola',
//             house: 25,
//             flat: 12
//         },
//         parents: [
//             'Vasia',
//             'Masha',
//         ],
//         rating: 5,
//         studying: ['js','java']
//     },
//     {
//         name: 'Natalii', age: 29, gender: 'female', address: {
//             city: 'Lviv',
//             street: 'Marko Vovchok',
//             house: 45,
//             flat: 45
//         },
//         parents: [
//             'Igor',
//             'Nina',
//         ],
//         rating: 4,
//         studying: ['python','java', 'css']
//     },
//     {
//         name: 'Alexsandr', age: 34, gender: 'male', address: {
//             city: 'Lviv',
//             street: 'Kitayska',
//             house: 10,
//             flat: 5
//         },
//         parents: [
//             'Petro',
//             'Alina',
//         ],
//         rating: 2,
//         studying: ['js','java','html']
//     },
//     {
//         name: 'Sergii', age: 12, gender: 'male',
//         parents: [
//             'Anton',
//             'Tamara',
//         ],
//         rating: 4,
//         studying: ['node','java', 'css','mongo','mysql']
//     },
//     {
//         name: 'Igor', age: 45, gender: 'male', address: {
//             city: 'Kyiv',
//             street: 'Shevchenko',
//             house: 100,
//             flat: 66
//         },
//         parents: [
//             'Igor',
//             'Igor',
//         ],
//         rating: 5,
//         studying: ['java','node']
//     },
//     {
//         name: 'Eva', age: 26, gender: 'female', address: {
//             city: 'Odessa',
//             street: 'Derebasovska',
//             house: 4,
//         },
//         parents: [
//             'Masha'
//         ],
//         rating: 2,
//         studying: ['js']
//     },
//     {
//         name: 'Kira', age: 49, gender: 'female', address: {
//             city: 'Uzgorod',
//             street: 'Doroshenka',
//             house: 201,
//             flat: 1
//         },
//         parents: [
//             'Vitaliy',
//             'Olha',
//         ],
//         rating: 2,
//         studying: ['java']
//     },
//     {
//         name: 'Vova', age: 16, gender: 'male', address: {
//             city: 'Uzgorod',
//             street: 'Bethoven',
//             house: 2,
//             flat: 145
//         },
//         rating: 3
//     }
//
// ])
//
// db.users.find()
//
// db.users.insertOne({car:'BMW',year:2003})
//
// db.users.find({gender:'female',rating:2})
// db.users.find({_id: ObjectId('66f7b72c8b674b5b865be8bc')})
// db.users.find(
//     {gender:'female',rating:2},
//     {name:1,age:true,_id:0}
// )
// db.users.find({
//     $and:[
//         {gender:'female'},
//         {rating:2}
//     ]
// })
//
// db.users.find({age:{$in:[25,12,5,88,26]}})
// db.users.find({
//     age:{
//         $not:{
//             $in:[25,12,5,25,26]
//         }
//     }
// })
//
// db.users.find({rating:{$gt:2}}) //>
// db.users.find({rating:{$gte:2}}) //=>
// db.users.find({rating:{$lt:4}}) //<
// db.users.find({rating:{$lte:4}}) //=<
// db.users.find({rating:{$ne:4}}) //!=
// db.users.find({rating:{$eq:4}}) //=
//
//
// //regexp
// db.users.find({name:/^A/})
// db.users.find({name:/^a/i})
// db.users.find({name:/a$/i})
// db.users.find({name:/.*l.*/i})
// db.users.find({name:/.{2}t/i})
// db.users.find({name:/^k.*a$/i})
//
// db.users.find().sort({rating:1})
// db.users.find().sort({rating:-1})
// db.users.find().sort({rating:-1,age:-1})
//
// db.users.find().sort({rating:1}).limit(3).skip(1)
//
//
// db.users.find()
//
// db.users.updateOne(
//     {_id:ObjectId('66f7b72c8b674b5b865be8b6')},
//     {$set:{gender:'animal'}}
// )
//
// db.users.updateMany(
//     {gender:'male'},
//     {$set:{gender:'animal'}}
// )
//
// db.users.updateOne(
//     {_id:ObjectId('66f7b72c8b674b5b865be8bd')},
//     {$unset:{status:1}}
// )
//
// db.users.find({parents:{$exists:0}})
// db.users.find({parents:{$exists:1}})
// db.users.find({parents:null})
// db.users.find({parents:{$size:2}})
//
// db.users.find({studying:'java'})
//
// db.users.updateOne({_id:ObjectId('66f7b72c8b674b5b865be8b6')},
//     {$push:{studying:'python'}}
// )
//
// db.users.updateOne({_id:ObjectId('66f7b72c8b674b5b865be8b6')},
//     {$pull:{parents:'Masha'}}
// )
//
// db.users.find({'studying.1':'java'})
//
// db.users.deleteOne({_id:ObjectId('66f7b7898b674b5b865be8bf')})
//
// db.users.find({age:{$lt:20}})
// db.users.find({$or:[{parents:'Tamara'},{parents:'Petro'}]})
// db.users.find({studying:'js'})
// db.users.updateMany({studying:{$size:1}},{$push:{studying:'java'}})
// db.users.find({$and:[{"address.house":{$gte:1}},{"address.house":{$lte:20}}]})
// db.users.find({'address.street':/.* .*/,'address.street':/.*\s.*/})
// db.users.deleteMany({studying:null})
// db.users.find({'parents':/na$/i})
// db.users.updateMany({studying:{$ne:'python'}},{$push:{studying:'python'}})
// db.users.find().sort({rating:-1,'address.flat':-1})
//

db.students.insertMany(
    [
        {
            "name": "Bob", "class": 7, "lessons": ["english", "mathematics"], "avgScore": 3.5, "parents": [
                {"gender": "female", "name": "Ira"},
                {"gender": "male", "name": "Dima", "profession": "programmer"}
            ]
        },
        {
            "name": "Alice", "class": 7, "lessons": ["english", "mathematics", 'geology'], "avgScore": 5, "parents": [
                {"gender": "female", "name": "Katya", "profession": "doctor"},
                {"gender": "male", "name": "Andrii", "profession": "doctor"}
            ]
        },
        {"name": "Viktor", "class": 7, "lessons": ["german", "informatics"], "avgScore": 4.1},
        {"name": "Dima", "class": 7, "lessons": ["german", "mathematics", "physics"], "avgScore": 3.5},
        {
            "name": "Katerina", "class": 1, "lessons": ["basic"], "avgScore": 4, "parents": [
                {"gender": "male", "name": "Igor", "profession": "scientist"}
            ]
        },
        {
            "name": "Ivanka", "class": 1, "lessons": ["basic"], "avgScore": 4.91, "parents": [
                {"gender": "female", "name": "Nadya", "profession": "teacher"},
                {"gender": "male", "name": "Oleg", "profession": "sailor"}
            ]
        },
        {
            "name": "Oleguk", "class": 1, "lessons": ["basic"], "avgScore": 4.2, "parents": [
                {"gender": "female", "name": "Katya", "profession": "journalist"},
                {"gender": "male", "name": "Miroslav", "profession": "photographer"}
            ]
        },
        {
            "name": "Igorko", "class": 1, "lessons": ["basic"], "avgScore": 2.61, "parents": [
                {"gender": "male", "name": "Vitalik", "profession": "builder"},
            ]
        },
        {
            "name": "Katya", "class": 1, "lessons": ["basic"], "avgScore": 3.92, "parents": [
                {"gender": "female", "name": "Solomiya", "profession": "architect"},
                {"gender": "male", "name": "Andriy", "profession": "driver"}
            ]
        },
        {
            "name": "Viktor", "class": 1, "lessons": ["basic"], "avgScore": 3.54, "parents": [
                {"gender": "male", "name": "Oleksandr", "profession": "soldier"},
                {"gender": "female", "name": "Svitlana", "profession": "soldier"}
            ]
        },
        {
            "name": "Ivan", "class": 2, "lessons": ["basic"], "avgScore": 4.2, "parents": [
                {"gender": "male", "name": "Ivan", "profession": "trainer"},
                {"gender": "female", "name": "Vika"}
            ]
        },
        {
            "name": "Artem", "class": 2, "lessons": ["how to be a star"], "avgScore": 3.9, "parents": [
                {"gender": "female", "name": "Albert", "profession": "star"},
            ]
        },
        {
            "name": "Kostya", "class": 2, "lessons": ["basic"], "avgScore": 4.24, "parents": [
                {"gender": "male", "name": "Ivan", "profession": "blogger"},
                {"gender": "male", "name": "Andriy", "profession": "blogger"}
            ]
        },
        {
            "name": "Inna", "class": 2, "lessons": ["basic"], "avgScore": 3.11, "parents": [
                {"gender": "male", "name": "Adam", "profession": "musician"},
                {"gender": "female", "name": "Diana"}
            ]
        },
        {
            "name": "Ivan", "class": 3, "lessons": ["basic"], "avgScore": 4.9, "parents": [
                {"gender": "male", "name": "Vlad", "profession": "merchandiser"},
                {"gender": "female", "name": "Galina", "profession": "teacher"}
            ]
        },
        {
            "name": "Galina", "class": 3, "lessons": ["basic"], "avgScore": 3.8, "parents": [
                {"gender": "male", "name": "Johny", "profession": "doctor"},
                {"gender": "female", "name": "Sasha", "profession": "porn star"}
            ]
        },
        {
            "name": "Dima", "class": 3, "lessons": ["basic"], "avgScore": 3.5, "parents": [
                {"gender": "male", "name": "Dima", "profession": "trainer"},
                {"gender": "female", "name": "Olga", "profession": "sportsman"}
            ]
        },
        {
            "name": "Nastya", "class": 4, "lessons": ["informatics", "physics"], "avgScore": 4.1, "parents": [
                {"gender": "male", "name": "Viktor", "profession": "programmer"},
                {"gender": "female", "name": "Karina", "profession": "doctor"}
            ]
        },
        {
            "name": "Murka", "class": 4, "lessons": ["physics"], "avgScore": 2.7, "parents": [
                {"gender": "female", "name": "Inessa", "profession": "writer"}
            ]
        },
        {
            "name": "Vasyl", "class": 4, "lessons": ["english"], "avgScore": 4.93, "parents": [
                {"gender": "female", "name": "Solomiya", "profession": "architect"},
                {"gender": "male", "name": "Andriy", "profession": "driver"}
            ]
        },
        {
            "name": "Feliks", "class": 4, "lessons": ["physics"], "avgScore": 2.12, "parents": [
                {"gender": "female", "name": "Tanya", "profession": "designer"},
                {"gender": "male", "name": "Andriy", "profession": "writer"}
            ]
        },
        {
            "name": "Katerina", "class": 4, "lessons": ["geology"], "avgScore": 4.51, "parents": [
                {"gender": "female", "name": "Ivanka", "profession": "architect"},
            ]
        },
        {
            "name": "Konstantin",
            "class": 4,
            "lessons": ["english", "informatics", "geology"],
            "avgScore": 2.31,
            "parents": [
                {"gender": "female", "name": "Natylya", "profession": "HR"},
                {"gender": "male", "name": "Andriy", "profession": "economist"}
            ]
        },
        {
            "name": "Illya", "class": 4, "lessons": ["basic"], "avgScore": 2.78, "parents": [
                {"gender": "female", "name": "Irina", "profession": "waitress"},
                {"gender": "female", "name": "Olga", "profession": "chief financial officer"}
            ]
        },
        {
            "name": "Roman", "class": 4, "lessons": ["basic"], "avgScore": 5, "parents": [
                {"gender": "male", "name": "Igor", "profession": "programmer"},
                {"gender": "female", "name": "Oksana", "profession": "scientist"}
            ]
        },
        {
            "name": "Petro", "class": 4, "lessons": ["basic"], "avgScore": 4.8, "parents": [
                {"gender": "male", "name": "Dima", "profession": "builder"},
                {"gender": "female", "name": "Inna", "profession": "seamstress"}
            ]
        }
    ]
);


db.teacher.insertMany(
    [
        {"name": "Mariya Ivanivna", "class_curator": 7, "lesson": "english", "payment": 2000},
        {"name": "Sergey Viktorovich", "class_curator": 9, "lesson": "informatics", "payment": 3200},
        {"name": "Ivan Borisovich", "class_curator": 6, "lesson": "mathematics", "payment": 2500},
        {"name": "Tetyna Visilivna", "class_curator": 5, "lesson": "french", "payment": 2000},
        {"name": "Oksana Olegivna", "class_curator": 8, "lesson": "physics", "payment": 4000},
        {"name": "Ostap Miroslavovich", "class_curator": 4, "lesson": "geology", "payment": 2500},
        {"name": "Dmitro Igorovich", "class_curator": 3, "lesson": "basic", "payment": 2200},
        {"name": "Mikhailo Denisovick", "class_curator": 2, "lesson": "basic", "payment": 2300},
        {"name": "Diana Viktorivna", "class_curator": 1, "lesson": "basic", "payment": 2100}
    ]
);
db.students.find()
db.teacher.find()


db.teacher.aggregate([
    {
        $group:{
            _id:'$lesson',
            lessonCount:{$sum:1},
            min:{$min:'$payment'},
            max:{$max:'$payment'},
            sumMoney:{$sum:'$payment'}
        }
    }
])

db.teacher.aggregate([
    {
        $group:{
            _id:'$lesson',
            lessonCount:{$sum:1},

        }
    },
    {
        $sort:{
            lessonCount:1
        }
    },
    {
        $addFields:{
            lesson:'$_id'
        }
    },
    {
        $project:{
            _id:0
        }
    }
])

db.teacher.aggregate([
    {
        $lookup:{
            from:'students',
            localField:'class_curator',
            foreignField:'class',
            as:'myStudents'
        }
    },
    {
        $match:{
            // 'myStudents.name':'Ivan'
            'myStudents.parents.profession':'doctor'
        }
    },
])

db.teacher.aggregate([
    {
        $match: {
            class_curator:{$gt:5}
        }
    },
    {
        $lookup:{
            from:'students',
            localField:'class_curator',
            foreignField:'class',
            as:'myStudents'
        },
    },
    {
        $sort:{class_curator:1}
    },
    {
        $unwind:'$myStudents'
    },
    {
        $unwind:'$myStudents.parents'
    },
    {
        $match:{
            'myStudents.parents.profession':'doctor'
        }
    },
    {
        $count:'DoctorsCount'
    }
])

use test

db.students.find({
    avgScore: 4.2
})

db.students.find({
    class:1
})

db.students.find({
    lessons:'basic'
})

db.students.find({
    'parents.profession':'builder'
})

db.students.find({
    avgScore:{$gt:4}
})

// finding all elements of array what have's null meanings + change meanings of elements array on 'waiter'
db.students.updateMany(
    {parents:{$exists:1}, 'parents.profession':null},
    {$set:{'parents.$[item].profession':'waiter'}},
    {'arrayFilters':[{'item.profession':null}]}
)

db.students.find()
db.students.find(
    {lessons:'english',lessons:'mathematics'}
)

db.students.find()
db.students.find({lessons:'english',lessons:'mathematics'})
db.students.find({lessons:{$all:['english','mathematics']}})
db.students.find({'lessons.1':'mathematics'})
db.students.findOne({'lessons.1':'mathematics'}).name
db.students.find({},{lessons:{$slice:2}})
db.students.find({lessons:{$size:3}})

// find for selector _id
db.students.find({_id:ObjectId('66f90d52610def20250bedce')})
//push element to array
db.students.updateOne(
    {_id:ObjectId('66f90d52610def20250bedce')},
    {$push:{lessons:'python'}}
)
// deleting string element and reconstruction to null
db.students.updateOne(
    {_id:ObjectId('66f90d52610def20250bedce')},
    {$unset:{'lessons.2':1}}
)
// delete null from array
db.students.updateOne(
    {_id:ObjectId('66f90d52610def20250bedce')},
    {$pull:{lessons:null}}
)
//delete last element of array
db.students.updateOne(
    {_id:ObjectId('66f90d52610def20250bedce')},
    {$pop:{lessons:1}}
)
//delete first element of array
db.students.updateOne(
    {_id:ObjectId('66f90d52610def20250bedce')},
    {$pop:{lessons:-1}}
)
//add element to array
db.students.updateOne(
    {_id:ObjectId('66f90d52610def20250bedce')},
    {$addToSet:{lessons:'swift'}}
)

// select all element of array/object $[]/${}
db.students.updateOne(
    {_id:ObjectId('66f90d52610def20250bedce')},
    {$set:{'lessons.$[]':'js'}}
)

db.students.updateOne(
    {_id:ObjectId('66f90d52610def20250bedce')},
    {$set:{'lessons.$[item]':'html'}},
    {arrayFilters:[{item:null}]}
)

// db.students.find({lessons:{$size:{$lt:4}}}) <--- not work

db.students.aggregate([  //this work's
    {
        $addFields:{
            lessonsCount:{$size:'$lessons'}
        }
    },
    {
        $match:{
            lessonsCount:{$lt:4}
        }
    },
    {
        $sort:{lessonsCount:-1}
    },
    {
        $project:{
            lessonsCount:0
        }
    }
])
//finding (get more 4x) elements of array + sorting


